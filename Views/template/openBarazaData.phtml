<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- This will show the git data for per entry -->
<h2>OpenBaraza Data</h2>

<?php
require_once('Models/Database.php');
require_once('Models/commits_openbaraza.php');
require_once('Models/commits_openbarazaDataSet.php');

$userCommitDataOB = new Models\commits_openbarazaDataSet();

// Fetch all commits from the database
$allCommits = $userCommitDataOB->fetchAllCommitsOBWithBuckets();

$quarters = [];
$commitCounts = [];

foreach ($allCommits as $row) {
    $quarters[] = $row['quarter_bucket'];
    $commitCounts[] = $row['total_value'];
}

// Pass the data to the frontend
$userCommitOBJSON = json_encode([
    'quarters' => $quarters,
    'commitCounts' => $commitCounts,
]);


// Include necessary files classes
require_once('Models/files_openbaraza.php');
require_once('Models/files_openbarazaDataSet.php');

// Instantiate filesDataSet
$filesData = new Models\files_openbarazaDataSet();

// Fetch all files from the database
$allFiles = $filesData->fetchOpenBarazaFilesBySize();
//set up array
$fileSizeChartDataOB = [
    'labels' => [],
    'datasets' => [
        [
            'label' => 'Line Counts',
            'data' => [],
        ],
    ],
];
//populate the array with file name and line count
foreach ($allFiles as $file) {
    $fileSizeChartDataOB['labels'][] = $file->getName();
    $fileSizeChartDataOB['datasets'][0]['data'][] = $file->getLineCount();
}

// Convert file size data to JSON
$fileSizedataJSON = json_encode($fileSizeChartDataOB);
?>

<!-- user Commit History -->
<h3>User Commit History</h3>
<h4>Displays the Number of Commits per quarter</h4>
<h6>Disclaimer: quarters where no commits occurred are omitted from the graphs</h6>
<div class="chart-container">
    <canvas id="commitChartOB"></canvas>
</div>

<script>
    // Parse PHP data in JavaScript
    var chartData = <?php echo $userCommitOBJSON; ?>;

    // Create the bar chart
    var ctx = document.getElementById('commitChartOB').getContext('2d');
    var commitChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: chartData.quarters,
            datasets: [{
                label: 'Number of Commits',
                data: chartData.commitCounts,
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>


<!-- Filesize Breakdown -->
<h3>Filesize Breakdown</h3>
<h4>Shows the Line-count of Each File</h4>
<h5>This is the breakdown for the Open Baraza files.</h5>
<div class="chart-container">
    <canvas id="<?php echo $view->here ?>filesize"></canvas>
</div>

<script>
    // Parse PHP-generated JSON data for file sizes
    var fileSizeChartData = <?php echo $fileSizedataJSON; ?>;

    // Set up Chart.js for file size breakdown
    var fileSizeCtx = document.getElementById('<?php echo $view->here?>filesize').getContext('2d');
    var myFileSizeChart = new Chart(fileSizeCtx, {
        type: 'pie',
        data: fileSizeChartData,
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'File Size Breakdown'
            }
        }
    });
</script>
